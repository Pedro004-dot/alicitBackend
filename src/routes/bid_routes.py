"""
Rotas para opera√ß√µes com licita√ß√µes
"""
from flask import Blueprint
from controllers.bid_controller import BidController

# Criar blueprint para licita√ß√µes
bid_routes = Blueprint('bids', __name__, url_prefix='/api/bids')

# Instanciar controller
controller = BidController()

# ====== ROTAS UTILIZADAS PELO FRONTEND ======

@bid_routes.route('/', methods=['GET'], strict_slashes=False)
def get_bids():
    """
    GET /api/bids - Listar licita√ß√µes com pagina√ß√£o
    
    DESCRI√á√ÉO:
    - Lista todas as licita√ß√µes cadastradas no sistema
    - Usado pelo frontend para popular a tabela principal
    - Suporte a pagina√ß√£o e filtros b√°sicos
    
    PAR√ÇMETROS (Query):
    - page: N√∫mero da p√°gina (opcional)
    - limit: Itens por p√°gina (opcional)
    - status: Filtro por status (opcional)
    
    RETORNA:
    - Array de licita√ß√µes com dados b√°sicos
    - Metadados de pagina√ß√£o (total, p√°ginas)
    """
    return controller.get_all_bids()

@bid_routes.route('/detail', methods=['GET'])
def get_bid_detail():
    """
    GET /api/bids/detail?pncp_id=<id> - Obter detalhes de licita√ß√£o espec√≠fica
    
    DESCRI√á√ÉO:
    - Retorna informa√ß√µes completas de uma licita√ß√£o espec√≠fica
    - Usado pelo frontend no modal de detalhes
    - Inclui descri√ß√£o, valores, prazos e documentos
    
    PAR√ÇMETROS (Query):
    - pncp_id: ID √∫nico da licita√ß√£o no PNCP (obrigat√≥rio)
    
    RETORNA:
    - Dados completos da licita√ß√£o
    - Informa√ß√µes do √≥rg√£o e modalidade
    """
    return controller.get_bid_detail_by_query()

@bid_routes.route('/items', methods=['GET'])
def get_bid_items():
    """
    GET /api/bids/items?pncp_id=<id> - Buscar itens de licita√ß√µes
    
    DESCRI√á√ÉO:
    - Lista todos os itens de uma licita√ß√£o espec√≠fica
    - Usado pelo frontend para mostrar detalhes dos produtos/servi√ßos
    - Inclui descri√ß√£o, quantidade, valores unit√°rios
    
    PAR√ÇMETROS (Query):
    - pncp_id: ID √∫nico da licita√ß√£o no PNCP (obrigat√≥rio)
    
    RETORNA:
    - Array de itens com detalhes completos
    - Valores unit√°rios e totais por item
    """
    return controller.get_bid_items_by_query()

@bid_routes.route('/documents', methods=['GET'])
def get_bid_documents():
    """
    GET /api/bids/documents?licitacao_id=<id> - Buscar documentos de uma licita√ß√£o no Supabase Storage
    
    DESCRI√á√ÉO:
    - Lista todos os documentos armazenados no Supabase Storage para uma licita√ß√£o espec√≠fica
    - Usado pelo frontend para visualizar documentos na p√°gina de an√°lise
    - Inclui nome, URL p√∫blica, tipo e metadados dos arquivos
    
    PAR√ÇMETROS (Query):
    - licitacao_id: ID da licita√ß√£o (obrigat√≥rio)
    
    RETORNA:
    - Array de documentos com URLs p√∫blicas para visualiza√ß√£o
    - Metadados como tamanho, tipo e datas de cria√ß√£o/atualiza√ß√£o
    """
    return controller.get_bid_documents()

@bid_routes.route('/test-storage', methods=['GET'])
def test_supabase_connection():
    """
    GET /api/bids/test-storage - Testar conectividade com Supabase Storage
    
    DESCRI√á√ÉO:
    - Testa a conectividade com o Supabase Storage
    - Lista buckets dispon√≠veis e verifica se o bucket alvo existe
    - Usado para debug e verifica√ß√£o de configura√ß√£o
    
    RETORNA:
    - Status da conectividade
    - Lista de buckets dispon√≠veis
    - Verifica√ß√£o do bucket espec√≠fico
    """
    return controller.test_supabase_connection()

@bid_routes.route('/recent', methods=['GET'])
def get_recent_bids():
    """
    GET /api/bids/recent - Buscar licita√ß√µes mais recentes
    
    DESCRI√á√ÉO:
    - Retorna as licita√ß√µes mais recentemente cadastradas
    - Usado pelo frontend na p√°gina de busca
    - Ordenadas por data de publica√ß√£o descrescente
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 20)
    
    RETORNA:
    - Array de licita√ß√µes ordenadas por data
    - Dados b√°sicos para visualiza√ß√£o r√°pida
    """
    return controller.get_recent_bids()

@bid_routes.route('/status/<string:status>', methods=['GET'])
def get_bids_by_status(status):
    """
    GET /api/bids/status/<status> - Buscar licita√ß√µes por status
    
    DESCRI√á√ÉO:
    - Filtra licita√ß√µes por status espec√≠fico
    - Usado pelo frontend para busca filtrada
    - Status comuns: "aberta", "fechada", "suspensa", etc.
    
    PAR√ÇMETROS:
    - status: Status da licita√ß√£o (ex: "aberta", "fechada")
    
    RETORNA:
    - Array de licita√ß√µes com o status especificado
    - Ordenadas por relev√¢ncia e data
    """
    return controller.get_bids_by_status(status)

@bid_routes.route('/active', methods=['GET'])
def get_active_bids():
    """
    GET /api/bids/active - Buscar licita√ß√µes ativas (ainda abertas para propostas)
    
    DESCRI√á√ÉO:
    - Filtra licita√ß√µes onde data_encerramento_proposta > data atual
    - Usado pelo frontend na p√°gina Home para mostrar oportunidades ativas
    - Permite filtro por data m√≠nima de encerramento
    
    PAR√ÇMETROS (Query):
    - after: Data m√≠nima para filtro (formato ISO: YYYY-MM-DD) (opcional)
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 100)
    
    RETORNA:
    - Array de licita√ß√µes ainda abertas para propostas
    - Total de licita√ß√µes ativas
    - Ordenadas por data de encerramento mais pr√≥xima
    """
    return controller.get_active_bids()

# ====== NOVAS ROTAS DE OPORTUNIDADES DE NEG√ìCIO ======

@bid_routes.route('/srp-opportunities', methods=['GET'])
def get_srp_opportunities():
    """
    GET /api/bids/srp-opportunities - Oportunidades SRP (Sistema de Registro de Pre√ßos)
    
    DESCRI√á√ÉO:
    - Busca licita√ß√µes marcadas como SRP (srp = true)
    - Oportunidades de contratos v√°lidos por at√© 1 ano
    - Alto valor estrat√©gico para fornecedores
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 50)
    
    RETORNA:
    - Array de licita√ß√µes SRP com alertas estrat√©gicos
    - Campos calculados: dias_at√©_deadline, urgency_level
    """
    return controller.get_srp_opportunities()

@bid_routes.route('/active-proposals', methods=['GET'])
def get_active_proposals():
    """
    GET /api/bids/active-proposals - Propostas com prazos ATIVOS (timing cr√≠tico)
    
    DESCRI√á√ÉO:
    - Licita√ß√µes onde data_encerramento_proposta > agora
    - Foco em urg√™ncia: <24h (üö®), <3 dias (‚ö†Ô∏è)
    - A√ß√£o imediata necess√°ria para participa√ß√£o
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 50)
    
    RETORNA:
    - Array de licita√ß√µes abertas ordenadas por urg√™ncia
    - Alertas de timing cr√≠tico e contagem regressiva
    """
    return controller.get_active_proposals()

@bid_routes.route('/materials-opportunities', methods=['GET'])
def get_materials_opportunities():
    """
    GET /api/bids/materials-opportunities - Oportunidades de MATERIAIS/PRODUTOS
    
    DESCRI√á√ÉO:
    - Itens classificados como 'M' (Material) na API PNCP
    - Segmenta√ß√£o para empresas que fornecem produtos f√≠sicos
    - Exclus√£o de servi√ßos (material_ou_servico = 'M')
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 100)
    
    RETORNA:
    - Array de itens de materiais com dados da licita√ß√£o pai
    - Valores unit√°rios e informa√ß√µes de fornecimento
    """
    return controller.get_materials_opportunities()

@bid_routes.route('/services-opportunities', methods=['GET'])
def get_services_opportunities():
    """
    GET /api/bids/services-opportunities - Oportunidades de SERVI√áOS
    
    DESCRI√á√ÉO:
    - Itens classificados como 'S' (Servi√ßo) na API PNCP
    - Segmenta√ß√£o para empresas prestadoras de servi√ßos
    - Exclus√£o de materiais (material_ou_servico = 'S')
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 100)
    
    RETORNA:
    - Array de itens de servi√ßos com dados da licita√ß√£o pai
    - Especifica√ß√µes t√©cnicas e valores de presta√ß√£o
    """
    return controller.get_services_opportunities()

@bid_routes.route('/me-epp-opportunities', methods=['GET'])
def get_me_epp_opportunities():
    """
    GET /api/bids/me-epp-opportunities - Oportunidades EXCLUSIVAS ME/EPP
    
    DESCRI√á√ÉO:
    - Itens com beneficio_micro_epp = true
    - Reservados para Micro e Pequenas Empresas
    - Competi√ß√£o reduzida, alta taxa de sucesso
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 50)
    
    RETORNA:
    - Array de itens exclusivos ME/EPP
    - Dados estrat√©gicos para pequenas empresas
    """
    return controller.get_me_epp_opportunities()

@bid_routes.route('/search-by-ncm/<string:ncm_code>', methods=['GET'])
def search_by_ncm_code(ncm_code):
    """
    GET /api/bids/search-by-ncm/<ncm_code> - Busca por c√≥digo NCM espec√≠fico
    
    DESCRI√á√ÉO:
    - Busca ultra-precisa por c√≥digo NCM/NBS
    - Ideal para empresas especializadas em produtos espec√≠ficos
    - M√°xima relev√¢ncia para fornecedores de nicho
    
    PAR√ÇMETROS:
    - ncm_code: C√≥digo NCM exato (ex: "84714100")
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 50)
    
    RETORNA:
    - Array de itens com NCM exato
    - Oportunidades ultra-espec√≠ficas para especialistas
    """
    return controller.search_by_ncm_code(ncm_code)

@bid_routes.route('/disputa-mode/<int:mode_id>', methods=['GET'])
def get_bids_by_disputa_mode(mode_id):
    """
    GET /api/bids/disputa-mode/<mode_id> - Licita√ß√µes por modo de disputa
    
    DESCRI√á√ÉO:
    - Filtra por modo_disputa_id da API PNCP
    - 1=Aberto, 2=Fechado, 3=Aberto-Fechado
    - Estrat√©gia diferenciada por tipo de disputa
    
    PAR√ÇMETROS:
    - mode_id: ID do modo de disputa (1, 2, ou 3)
    
    PAR√ÇMETROS (Query):
    - limit: Quantidade m√°xima de registros (opcional, padr√£o: 50)
    
    RETORNA:
    - Array de licita√ß√µes do modo espec√≠fico
    - Informa√ß√µes sobre estrat√©gia de participa√ß√£o
    """
    return controller.get_bids_by_disputa_mode(mode_id)

@bid_routes.route('/enhanced-statistics', methods=['GET'])
def get_enhanced_statistics():
    """
    GET /api/bids/enhanced-statistics - Estat√≠sticas com insights de neg√≥cio
    
    DESCRI√á√ÉO:
    - Utiliza todos os novos campos das APIs PNCP
    - An√°lises de SRP, propostas ativas, distribui√ß√£o ME/EPP
    - Dashboard executivo com KPIs estrat√©gicos
    
    RETORNA:
    - Estat√≠sticas agregadas por tipo de oportunidade
    - Insights automatizados para tomada de decis√£o
    - An√°lises de tend√™ncias e oportunidades de mercado
    """
    return controller.get_enhanced_statistics()

# ====== ROTAS ADMINISTRATIVAS (PARA MANUTEN√á√ÉO) ======

@bid_routes.route('/<pncp_id>', methods=['GET'])
def get_bid_by_pncp_id(pncp_id):
    """
    GET /api/bids/<pncp_id> - Obter licita√ß√£o espec√≠fica por PNCP ID
    
    DESCRI√á√ÉO:
    - Busca uma licita√ß√£o usando o ID do PNCP como par√¢metro de rota
    - Alternativa √† rota /detail para casos espec√≠ficos
    - Usado para integra√ß√µes diretas com o PNCP
    
    PAR√ÇMETROS:
    - pncp_id: ID √∫nico da licita√ß√£o no PNCP
    
    RETORNA:
    - Dados completos da licita√ß√£o
    - Mesmo formato da rota /detail
    """
    return controller.get_bid_detail(pncp_id)

@bid_routes.route('/<pncp_id>/items', methods=['GET'])
def get_bid_items_by_pncp_id(pncp_id):
    """
    GET /api/bids/<pncp_id>/items - Obter itens de licita√ß√£o espec√≠fica
    
    DESCRI√á√ÉO:
    - Lista itens usando PNCP ID como par√¢metro de rota
    - Alternativa √† rota /items para casos espec√≠ficos
    - Usado para integra√ß√µes diretas com o PNCP
    
    PAR√ÇMETROS:
    - pncp_id: ID √∫nico da licita√ß√£o no PNCP
    
    RETORNA:
    - Array de itens da licita√ß√£o
    - Mesmo formato da rota /items
    """
    return controller.get_bid_items(pncp_id)

@bid_routes.route('/detailed', methods=['GET'])
def get_detailed_bids():
    """
    GET /api/bids/detailed - Obter licita√ß√µes com informa√ß√µes detalhadas
    
    DESCRI√á√ÉO:
    - Lista licita√ß√µes com informa√ß√µes completas
    - Inclui dados de √≥rg√£o, modalidade e itens resumidos
    - Usado para relat√≥rios e an√°lises administrativas
    
    PAR√ÇMETROS (Query):
    - page: N√∫mero da p√°gina (opcional)
    - limit: Itens por p√°gina (opcional)
    
    RETORNA:
    - Array de licita√ß√µes com dados expandidos
    - Informa√ß√µes agregadas dos itens
    """
    return controller.get_detailed_bids()

@bid_routes.route('/uf/<string:uf>', methods=['GET'])
def get_bids_by_uf(uf):
    """
    GET /api/bids/uf/<uf> - Buscar licita√ß√µes por UF
    
    DESCRI√á√ÉO:
    - Filtra licita√ß√µes por Unidade Federativa (estado)
    - Usado para an√°lises regionais e relat√≥rios
    - UF deve seguir padr√£o de 2 letras (ex: SP, RJ, MG)
    
    PAR√ÇMETROS:
    - uf: Sigla da Unidade Federativa (2 letras)
    
    RETORNA:
    - Array de licita√ß√µes do estado especificado
    - Ordenadas por data de publica√ß√£o
    """
    return controller.get_bids_by_uf(uf)

@bid_routes.route('/statistics', methods=['GET'])
def get_bid_statistics():
    """
    GET /api/bids/statistics - Obter estat√≠sticas das licita√ß√µes
    
    DESCRI√á√ÉO:
    - Gera estat√≠sticas agregadas das licita√ß√µes
    - Inclui totais por status, valores m√©dios, distribui√ß√£o por √≥rg√£o
    - Usado para dashboards administrativos e relat√≥rios
    
    RETORNA:
    - Dados estat√≠sticos consolidados
    - M√©tricas de desempenho do sistema
    """
    return controller.get_bid_statistics()

 