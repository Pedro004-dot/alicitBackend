#!/usr/bin/env python3

"""
Debug direto da fun√ß√£o de relev√¢ncia.
"""

import os
import sys
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from repositories.licitacao_repository import LicitacaoPNCPRepository
import logging

# Habilitar logs de DEBUG
logging.basicConfig(level=logging.DEBUG)

def testar_relevancia_direta():
    """
    Teste direto da fun√ß√£o de relev√¢ncia.
    """
    print("üîß DEBUG: Teste direto da fun√ß√£o de relev√¢ncia")
    print("=" * 60)
    
    repo = LicitacaoPNCPRepository()
    
    # Casos de teste
    casos_teste = [
        {
            "objeto": "SERVI√áOS DE LIMPEZA E CONSERVA√á√ÉO",
            "termos": ["limpeza"],
            "esperado": "> 0.5"
        },
        {
            "objeto": "Contrata√ß√£o de empresa especializada em desinsetiza√ß√£o, desratiza√ß√£o e dedetiza√ß√£o",  
            "termos": ["limpeza"],
            "esperado": "< 0.5"
        },
        {
            "objeto": "AQUISI√á√ÉO DE ALIMENTA√á√ÉO ESCOLAR",
            "termos": ["alimenta√ß√£o"],
            "esperado": "> 0.5"
        },
        {
            "objeto": "SISTEMA DE GEST√ÉO INTEGRADA",
            "termos": ["sistema"],
            "esperado": "> 0.5"
        },
        {
            "objeto": "REF. A COMPRA DE COMPTADORES E NOTEBOOK PARA A PROMO√á√ÉO SOCIAL",
            "termos": ["sistema", "informatica"],
            "esperado": "< 0.3"
        }
    ]
    
    print("üß™ EXECUTANDO TESTES DE RELEV√ÇNCIA:")
    print("-" * 60)
    
    for i, caso in enumerate(casos_teste):
        print(f"\nüîç TESTE {i+1}:")
        print(f"   üìù Objeto: {caso['objeto']}")
        print(f"   üéØ Termos: {caso['termos']}")
        print(f"   üìä Esperado: {caso['esperado']}")
        
        # Executar teste
        score = repo._calcular_relevancia_objeto(caso['objeto'], caso['termos'])
        print(f"   ‚úÖ Resultado: {score:.3f}")
        
        # Verificar se est√° correto
        if caso['esperado'].startswith('>'):
            limite = float(caso['esperado'][2:])
            status = "‚úÖ PASSOU" if score > limite else "‚ùå FALHOU"
        else:
            limite = float(caso['esperado'][2:])
            status = "‚úÖ PASSOU" if score < limite else "‚ùå FALHOU"
        
        print(f"   üèÅ Status: {status}")
    
    # Teste adicional: normaliza√ß√£o
    print("\nüîß TESTE DE NORMALIZA√á√ÉO:")
    print("-" * 30)
    
    textos_teste = [
        "SERVI√áOS DE LIMPEZA",
        "servi√ßos de limpeza",
        "Servi√ßos de Limpeza e Conserva√ß√£o",
        "alimenta√ß√£o escolar",
        "ALIMENTA√á√ÉO",
        "sistema",
        "SISTEMA DE GEST√ÉO"
    ]
    
    for texto in textos_teste:
        normalizado = repo._normalizar_texto(texto)
        print(f"   '{texto}' -> '{normalizado}'")

if __name__ == "__main__":
    testar_relevancia_direta() 